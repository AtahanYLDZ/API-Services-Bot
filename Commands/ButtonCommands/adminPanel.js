const config = require('../../Settings/config');
const { emojis } = config;
const customerSchema = require('../../Database/Schemas/customerSchema');
const APIList = require('../../Settings/apiList.json');
const { codeBlock, EmbedBuilder, ButtonBuilder, ButtonStyle, ActionRowBuilder, ModalBuilder, TextInputStyle, TextInputBuilder, StringSelectMenuBuilder, StringSelectMenuOptionBuilder, ComponentType } = require("discord.js");
const { apiTable, toplamAylikKazanÃ§ } = require('../../Settings/Functions/functions');

module.exports = {
    customId: "adminPanel",
    deferReply: false,
    async execute(client, int, embed, values) {

        const auth = values[1];

        let authData = await customerSchema.findOne({ Auth: auth });
        if(!authData) {

            return await int.update({ embeds:[embed.setDescription(`
            Merhaba ${int.user} ${emojis.hello}!
            
            Girilen bilgilerle eÅŸleÅŸen bir __Auth__ kaydÄ± bulunamadÄ±, bilgilerinizi kontrol edin ve tekrar deneyin
            
            BaÅŸlÄ±ca Hatalar;
            \`1.\` BÃ¶yle bir Auth kaydÄ± veritabanÄ±nda bulunmuyor olabilir.
            \`2.\` Auth bilgisi veya Åžifre bilgisi yanlÄ±ÅŸ girilmiÅŸ olabilir.
            \`3.\` YaptÄ±ÄŸÄ±nÄ±z bir hatadan dolayÄ± "Auth" kaydÄ±nÄ±z silinmiÅŸ olabilir.
            
            EÄŸer hata bunlardan biri deÄŸil ise lÃ¼tfen "GeliÅŸtirici ekibine" yazmayÄ±n, sorunlarÄ±nÄ±zÄ± sadece yÃ¶netim ve Ã¼st yÃ¶netimdeki kiÅŸilere bildirin.
            `)], components: [], ephemeral: true })

        }

        let controlPanelMenu = new StringSelectMenuBuilder()
        .setCustomId(`controlPanelMenu-${auth}-${int.user.id}`)
        .setPlaceholder("Admin paneline eriÅŸmek iÃ§in tÄ±klayÄ±n.")
        .addOptions([
            new StringSelectMenuOptionBuilder()
            .setLabel("Auth Ekle")
            .setValue(`addAuth`)
            .setDescription("Buraya tÄ±klayarak yeni bir Auth ekleyebilirsiniz.")
            .setEmoji(emojis.auth),
            new StringSelectMenuOptionBuilder()
            .setLabel("Auth Sil")
            .setValue(`removeAuth`)
            .setDescription("Buraya tÄ±klayarak bir Auth'u silebilirsiniz.")
            .setEmoji(emojis.auth),
            new StringSelectMenuOptionBuilder()
            .setLabel("Auth Bilgi")
            .setValue(`authInfo`)
            .setDescription("Buraya tÄ±klayarak bir Auth'un bilgilerini gÃ¶rebilirsiniz.")
            .setEmoji(emojis.info),
            new StringSelectMenuOptionBuilder()
            .setLabel("Auth API Ekle")
            .setValue(`addSorgu`)
            .setDescription("Buraya tÄ±klayarak bir Auth'a yeni bir API ekleyebilirsiniz.")
            .setEmoji(emojis.ekle),
            new StringSelectMenuOptionBuilder()
            .setLabel("Auth API Sil")
            .setValue(`removeSorgu`)
            .setDescription("Buraya tÄ±klayarak bir Auth'dan bir API silebilirsiniz.")
            .setEmoji(emojis.sil),
            new StringSelectMenuOptionBuilder()
            .setLabel("Auth API DÃ¼zenle")
            .setValue(`editSorgu`)
            .setDescription("Buraya tÄ±klayarak bir Auth'dan bir API'yÄ± dÃ¼zenleyebilirsiniz.")
            .setEmoji(emojis.api),
            new StringSelectMenuOptionBuilder()
            .setLabel("Auth DÃ¼zenle")
            .setValue(`editAuth`)
            .setDescription("Buraya tÄ±klayarak bir Auth'u dÃ¼zenleyebilirsiniz.")
            .setEmoji(emojis.ip),
            new StringSelectMenuOptionBuilder()
            .setLabel("Auth API Listele")
            .setValue(`listAuth`)
            .setDescription("Buraya tÄ±klayarak bir Auth'un API'lerini listeyebilirsiniz.")
            .setEmoji(emojis.list),
        ])

        let controlPanelRow = new ActionRowBuilder().addComponents(controlPanelMenu)
        
        let row = new ActionRowBuilder().addComponents([
            new ButtonBuilder()
            .setCustomId(`info-${int.user.id}`)
            .setEmoji(emojis.info)
            .setStyle(ButtonStyle.Primary),
            new ButtonBuilder()
            .setCustomId(`payment-${auth}-${int.user.id}`)
            .setEmoji(emojis.payment)
            .setStyle(ButtonStyle.Success),
            new ButtonBuilder()
            .setCustomId(`settings-${auth}-${int.user.id}`)
            .setEmoji(emojis.settings)
            .setStyle(ButtonStyle.Secondary),
            new ButtonBuilder()
            .setCustomId(`back-${auth}-${int.user.id}`)
            .setEmoji(emojis.back)
            .setStyle(ButtonStyle.Primary),
        ])

        await int.update({ embeds: [embed.setDescription(`
        Merhaba ${int.user} ${emojis.hello}!
        
        Bu bot Ã¼zerinden **Bizlerden** almÄ±ÅŸ olduÄŸunuz **__Auth__** sisteminizi Ã¶zelleÅŸtirebilirsiniz, bunun hariÃ§inde kendi kullanÄ±cÄ± bilgilerinizide deÄŸiÅŸtirme imkanÄ± saÄŸlamÄ±ÅŸ oluyoruz siz deÄŸerli kullanÄ±cÄ±larÄ±mÄ±za.
        
        Ä°ade PolitakasÄ±: **3 GÃ¼n** ve Ã¼zeri kullandÄ±ÄŸÄ±nÄ±z API'ler iÃ§in herhangi bir geri Ã¶deme talep edemezsiniz, 3 gÃ¼n ve altÄ±nda kullandÄ±ysanÄ±z bize gerekli bir aÃ§Ä±klama yapmak __zorundasÄ±nÄ±z__.
        Not: Ä°adeler **5 Ä°ÅŸ GÃ¼nÃ¼** iÃ§eriÅŸinde yapÄ±lÄ±yor, Ä±srar etmeyin ve diÄŸer kullanÄ±cÄ±lar gibi sabÄ±r ile bekleyin. (Israr halinde Perla Ä°ade KoÅŸullarÄ±na AykÄ±rÄ± Hareketten dolayÄ± Ã¶demeyi reddetme hakkÄ±na sahiptir. ðŸ™‚ )

        Gizlilik PolitakasÄ±: Perla API Servis SaÄŸlayÄ±cÄ±sÄ± olarak gizliliÄŸinize Ã¶nem verip hiÃ§ bir bilginizi Ã¼Ã§Ã¼ncÃ¼ parti yazÄ±lÄ±m ve "aynasÄ±zlara" vermiyoruz Ã§Ã¼nkÃ¼ unutma biz bir aileyiz ðŸ™‚
        Not: Sizde bize karÅŸÄ± aynÄ± ÅŸekilde davranÄ±rsanÄ±z seviniriz, aksi takdirde "Perla API Servis SaÄŸlayÄ±cÄ±sÄ±" olarak sizinle iliÅŸkimizi kesmek zorunda kalÄ±rÄ±z.
        
        Sorumluluk Reddi: Perla API Servis SaÄŸlayÄ±cÄ±sÄ± olarak Ã¼nlÃ¼ oyunlarÄ±nÄ± yapmanÄ±zÄ± Ã¶nermiyor ve tavsiye etmiyoruz, yapmanÄ±z durumunda baÅŸÄ±nÄ±za aÃ§Ä±lacak herhangi bir suÃ§tan "Perla API Servis SaÄŸlayÄ±cÄ±sÄ±" sorumlu deÄŸildir. (Kendi aptallÄ±ÄŸÄ±nÄ±z amÄ±na koyim ne yapalÄ±m bizde ðŸ™‚)

        \`1.\` Ã–deme geÃ§miÅŸinizi gÃ¶rmek iÃ§in \`${emojis.payment}\` emojisine tÄ±klayÄ±n.
        \`2.\` AÅŸaÄŸÄ±daki \`SeÃ§meli menÃ¼den\` Admin paneline eriÅŸebilirsiniz.
        `)], components: [row, controlPanelRow] }).catch(() => {})

    }
}